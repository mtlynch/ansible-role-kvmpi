---
- name: install HID USB gadget
  import_tasks: install_usb_gadget.yml
  when: tinypilot_provision_usb_gadget

- name: collect TinyPilot required apt packages on all systems
  set_fact:
    tinypilot_packages:
      - git
      - python3-venv
      - sudo

- name: collect Debian and Ubuntu specific TinyPilot required apt packages
  set_fact:
    tinypilot_packages: "{{ tinypilot_packages }} + ['python-pip']"
  when: ansible_distribution == 'Debian' or (ansible_distribution == 'Ubuntu' and ansible_distribution_version != '20.04')

- name: collect Ubuntu 20.04 specific TinyPilot required apt packages
  set_fact:
    tinypilot_packages: "{{ tinypilot_packages }} + ['python3-pip']"
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04'

- name: install TinyPilot pre-requisite packages
  apt:
    name: "{{ tinypilot_packages }}"
    state: present

- name: create tinypilot group
  group:
    name: "{{ tinypilot_group }}"
    state: present

- name: create tinypilot user
  user:
    name: "{{ tinypilot_user }}"
    group: "{{ tinypilot_group }}"
    system: yes
    create_home: no

- name: enable passwordless sudo for shutdown command
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: "{{ tinypilot_user }} ALL=(ALL) NOPASSWD: /sbin/shutdown"

- name: create TinyPilot folder
  file:
    path: "{{ tinypilot_dir }}"
    state: directory
    owner: "{{ tinypilot_user }}"
    group: "{{ tinypilot_group }}"

- name: get TinyPilot repo
  git:
    repo: "{{ tinypilot_repo }}"
    dest: "{{ tinypilot_dir }}"
    version: "{{ tinypilot_repo_branch }}"
    accept_hostkey: yes
  notify:
    - restart TinyPilot service

- name: find absolute path to python3
  shell: realpath $(which python3)
  register: realpath_python3
  changed_when: false

- name: save absolute path to python3
  set_fact:
    python3_abs_path: "{{ realpath_python3.stdout }}"

- name: create TinyPilot virtualenv
  pip:
    virtualenv: "{{ tinypilot_dir }}/venv"
    virtualenv_command: "{{ python3_abs_path }} -m venv venv"
    requirements: "{{ tinypilot_dir }}/requirements.txt"
  notify:
    - restart TinyPilot service

- name: fix TinyPilot folder permissions
  file:
    path: "{{ tinypilot_dir }}"
    state: directory
    owner: "{{ tinypilot_user }}"
    group: "{{ tinypilot_group }}"
    recurse: yes
  # TODO: Figure out why this fails idempotency otherwise.
  changed_when: false

- name: install TinyPilot as a service
  template:
    src: tinypilot.systemd.j2
    dest: /lib/systemd/system/tinypilot.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload TinyPilot systemd config
    - restart TinyPilot service

- name: enable systemd TinyPilot service file
  systemd:
    name: tinypilot
    enabled: yes
