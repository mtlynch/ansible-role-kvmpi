#!/bin/bash
#
# Update TinyPilot installation settings.

# Exit on first error.
set -e

# Echo commands to stdout.
set -x

# Treat undefined environment variables as errors.
set -u

print_help() {
    cat << EOF
Usage: ${0##*/} [-hq]
Collect debug logs.

    -h Display this help and exit.
    -q Run in silent mode without prompting user for inputs.
EOF
}

FLAG_SILENT_MODE=false

# Parse command-line arguments.
while getopts "hq" opt; do
    case $opt in
        h)
            print_help
            exit
            ;;
        q)
            FLAG_SILENT_MODE=true
            ;;
        *)
            print_help >&2
            exit 1
        # Add more options in the future.
    esac
done

# Check if there's a settings file with extra installation settings.
readonly TINYPILOT_SETTINGS_FILE="/home/tinypilot/settings.yml"
EXTRA_VARS_PATH=""
if [ -s "${TINYPILOT_SETTINGS_FILE}" ]; then
  echo "Using settings file at: ${TINYPILOT_SETTINGS_FILE}"
  EXTRA_VARS_PATH="@${TINYPILOT_SETTINGS_FILE}"
else
  echo "No pre-existing settings file found at: ${TINYPILOT_SETTINGS_FILE}"
  EXTRA_VARS_PATH=""
fi
readonly EXTRA_VARS_PATH

readonly INSTALLER_DIR="/opt/tinypilot-updater"
sudo chown "$(whoami):$(whoami)" --recursive "$INSTALLER_DIR"
pushd "${INSTALLER_DIR}"

. venv/bin/activate

readonly TINYPILOT_ROLE_NAME="mtlynch.tinypilot"
echo "- hosts: localhost
  connection: local
  become: true
  become_method: sudo
  gather_facts: no
  roles:
    - role: ${TINYPILOT_ROLE_NAME}" > update-settings.yml

ansible-playbook \
  update-settings.yml \
  --inventory localhost, \
  --extra-vars "${EXTRA_VARS_PATH}" \
  --tags "config" \
  -vvv

sudo chown "tinypilot:tinypilot" --recursive "$INSTALLER_DIR"
